#ifndef LPFUNC_H
#define LPFUNC_H

/*
longPolyFunctions.h содержит в себе функции для работы с длинными многочленами, разработанные студентами группы 7302.
Архитектор данного проекта - Кириллов Даниил.
Ответственный за качество - Иванов Даниил.
*/

#include "longPoly.h"
#include "../N/longNatFunctions.h"
#include "../Z/longIntFunctions.h"
#include "../Q/longFracFunctions.h"

/*
ADD_PP_P

@author Лунев Павел

Функция для сложения двух многочленов

Параметры:
1) P - первый многочлен
2) V - второй многочлен

Функция возвращает результат типа - PLNM
*/
PLNM ADD_PP_P(PLNM P, PLNM V);

/*
SUB_PP_P

@author Лунев Павел

Функция для вычитания двух многочленов
Параметры :
1) P - первый многочлен
2) V - второй многочлен
Функция возвращает результат типа - PLNM
*/
PLNM SUB_PP_P(PLNM P, PLNM V);

/*
MUL_PQ_P

@author Лунев Павел

Функция  умножает многочлен на рациональное число

Параметры :
1)M - многочлен
2)Q - рациональное число

Функция возвращает - PLNM
*/
PLNM MUL_PQ_P(PLNM M, FRCT Q);


/*
MUL_Pxk_P

@author Ivanov Daniil

Умножает полином на x в степени degree

Функция возвращает - PLNM
*/
PLNM MUL_Pxk_P(PLNM polynom, int degree);

/*
LED_P_Q

@author Мазуркевич Дмитрий

Функция возвращает старший коэффициент многочлена

Параметры:
1)A - многочлен

Функция возвращает - FRCT
*/
FRCT LED_P_Q(PLNM A);

/*
DEG_P_N

@author Krasotkin Ivan

Функция для получения степени многочлена

Параметры:
1) A - многочлен

Функция возвращает int - степень многочлена
*/
int DEG_P_N(PLNM A);

/*
FAC_P_Q

@author Десятников Григорий

Функция для вынесение из многочлена НОК знаменателей коэффициентов и НОД числителей

Параметры:
1) x - исходный полином

Функция возфращает тип PLNM (обработанный полином)
*/
PLNM FAC_P_Q(PLNM x);


/*
MUL_PP_P

@author Карманов Дмитрий

Функция умножения многочлена на многочлен

Параметры:
1)poly1 - первый многочлен
2)poly2 - второй многочлен

Возвращаемый тип - PLNM
*/
PLNM MUL_PP_P(PLNM poly1, PLNM poly2);

/*
DIV_PP_P

@author  Евич Никита

Функция для нахождения частного от деления
многочлена на многочлен при делении с остатком

Параметры:
1) A - делимое
2) B - делитель

Возвращаемый тип - PLNM
*/
PLNM DIV_PP_P(PLNM A, PLNM B);

/*
MOD_PP_P

@author Лебедев Антон 

Остаток от деления многочлена на многочлен при делении с остатком

Параметры:
1) first - первый многочлен
2) second - второй многочлен

Возвращаемый тип - PLNM
*/
PLNM MOD_PP_P(PLNM first, PLNM second);

/*
GCF_PP_P

Богданов К. 7302.

Функция находит НОД многочленов.

Параметры:
1) А - коэффициенты первого полинома
2) B - коэффициенты второго полинома
3) x, y - степени первого и второго полинома

Функция возвращает результат типа PLNM
*/
PLNM GCF_PP_P(PLNM A, PLNM B);//, int(&x)[NN], int(&y)[NN]

/*
DER_P_P

*************************************
* Функцию разрабатывал:             *
* Миллер Владислав                  *
* 7302                              *
*************************************

Функция для нахождения производно полинома

Параметры:
1) poly - исходный полином

Функция возвращает результат типа - PLNM

*/
PLNM DER_P_P(PLNM poly);

/*
NMR_P_P

@author Krasotkin Ivan

Функция для преобразования многочлена - кратные корни в простые

Параметры:
1) A - исходный многочлен

@return PLNM - многочлен в нужном виде
*/
PLNM NMR_P_P(PLNM A);
#endif